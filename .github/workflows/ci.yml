---
name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      # Deploy kinc cluster for Kubernetes testing
      - name: Deploy kinc cluster
        run: |
          # Enable IP forwarding
          echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward
          
          # Start kinc cluster (unprivileged - no --privileged needed)
          podman run -d --name kinc-cluster \
            --publish 6443:6443 \
            ghcr.io/t0masd/kinc:v0-1
          
          # Wait for cluster ready
          timeout 300 bash -c 'until curl -k -s https://127.0.0.1:6443/healthz >/dev/null; do sleep 2; done'
          
          # Extract kubeconfig
          mkdir -p ~/.kube
          podman cp kinc-cluster:/etc/kubernetes/admin.conf ~/.kube/config
          sed -i 's|server: https://.*:6443|server: https://127.0.0.1:6443|g' ~/.kube/config
          
          # Verify cluster is working
          kubectl cluster-info
          kubectl get nodes

      # Run comprehensive test suite
      - name: Run full test suite
        run: |
          go mod tidy
          make test

      # Collect and upload test logs and events
      - name: Upload test logs and events
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ github.run_number }}
          path: |
            work/
            tests/**/*.log
            tests/**/*.json
            **/*.log
            **/*.json
          retention-days: 30
        continue-on-error: true

      # Validate library can be imported
      - name: Validate library import
        run: |
          cat > test_import.go << 'EOF'
          package main
          import _ "github.com/T0MASD/faro/pkg"
          func main() {}
          EOF
          go mod tidy
          go build test_import.go
          rm test_import.go

      # Cleanup kinc cluster
      - name: Cleanup kinc cluster
        if: always()
        run: podman rm -f kinc-cluster || true
